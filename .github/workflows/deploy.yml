name: Deploy EAUT Assessment Platform

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: eaut_assessment_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Create test environment file
      run: |
        cat > .env << EOF
        NODE_ENV=test
        PORT=3001
        DB_HOST=localhost
        DB_PORT=5432
        DB_NAME=eaut_assessment_test
        DB_USER=postgres
        DB_PASSWORD=postgres
        JWT_SECRET=test-secret-key-for-github-actions
        JWT_EXPIRES_IN=1h
        CORS_ORIGIN=*
        EOF

    - name: Setup database
      run: |
        PGPASSWORD=postgres psql -h localhost -U postgres -d eaut_assessment_test -f schema.sql

    - name: Run tests
      run: npm test

  deploy-static:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Build static version
      run: |
        mkdir -p dist
        cp index.html dist/
        cp styles.css dist/
        cp main.js dist/
        cp -r js dist/
        cp -r css dist/ 2>/dev/null || true
        cp -r assets dist/ 2>/dev/null || true
        cp -r uploads dist/ 2>/dev/null || true
        
        # Create a demo-ready version
        sed -i 's|/api/|https://eaut-assessment-api.herokuapp.com/api/|g' dist/js/main.js || true
        
        # Add GitHub Pages configuration
        echo "eaut-assessment.github.io" > dist/CNAME || true

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
        cname: eaut-assessment.github.io

  deploy-railway:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Install Railway CLI
      run: npm install -g @railway/cli

    - name: Deploy to Railway
      run: railway deploy
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

  deploy-docker:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          eaut/assessment-platform:latest
          eaut/assessment-platform:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
